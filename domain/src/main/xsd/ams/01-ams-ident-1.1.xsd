<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright (c) 2013-2017 TomTom International B.V. All rights reserved.

-->
<xsd:schema targetNamespace="http://www.tomtom.com/ns/ams/mngmt/ident/1"
            xmlns="http://www.tomtom.com/ns/ams/mngmt/ident/1"
            xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" version="1.1"
            xml:lang="en">
    <xsd:element name="identity-in">
        <xsd:complexType>
            <xsd:annotation>
                <xsd:documentation>This type is guaranteed to be backward compatible within the
                    same minor version.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="secret" type="xsd:string" minOccurs="0" maxOccurs="1">
                    <xsd:annotation>
                        <xsd:documentation>An optional password used by the device to authenticate to
                            the Access Management Service. Only required if a username/password-based
                            log-in API is used to authenticate to the Access Management Service. If
                            different means of authenticating are employed, this must be left out.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="status" type="IdentityStatusType" minOccurs="0"
                             maxOccurs="1">
                    <xsd:annotation>
                        <xsd:documentation>Whether the identity is currently active or not. If
                            inactive, this identity is considered blocked, and will not be able to
                            authenticate.
                        </xsd:documentation>
                    </xsd:annotation>
                </xsd:element>
                <xsd:element name="entitlements" type="EntitlementsType" minOccurs="1"
                             maxOccurs="1" />
            </xsd:sequence>
            <xsd:attribute type="xsd:string" name="version" use="required" />
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="identity-out">
        <xsd:complexType>
            <xsd:annotation>
                <xsd:documentation>This type is guaranteed to be forward compatible within the
                    same minor version.
                </xsd:documentation>
            </xsd:annotation>
            <xsd:sequence>
                <xsd:element name="subjectId" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:annotation>
                            <xsd:documentation>The Subject ID of this identity.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                                <xsd:anyAttribute namespace="##any" processContents="lax" />
                            </xsd:extension>
                        </xsd:simpleContent>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="clientId" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:annotation>
                            <xsd:documentation>The Client ID of this identity.</xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleContent>
                            <xsd:extension base="xsd:string">
                                <xsd:anyAttribute namespace="##any" processContents="lax" />
                            </xsd:extension>
                        </xsd:simpleContent>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="status" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:annotation>
                            <xsd:documentation>Whether the identity is currently active or not. If
                                inactive, this identity is considered blocked, and will not be able to
                                authenticate.
                            </xsd:documentation>
                        </xsd:annotation>
                        <xsd:simpleContent>
                            <xsd:extension base="ExtensibleIdentityStatusType">
                                <xsd:anyAttribute namespace="##any" processContents="lax" />
                            </xsd:extension>
                        </xsd:simpleContent>
                    </xsd:complexType>
                </xsd:element>
                <xsd:element name="entitlements" minOccurs="1" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:complexContent>
                            <xsd:extension base="ExtensibleEntitlementsType">
                                <xsd:anyAttribute namespace="##any" processContents="lax" />
                            </xsd:extension>
                        </xsd:complexContent>
                    </xsd:complexType>
                </xsd:element>
                <xsd:any namespace="##targetNamespace" processContents="lax" minOccurs="0"
                         maxOccurs="unbounded" />
            </xsd:sequence>
            <xsd:attribute type="xsd:string" name="version" use="required" />
            <xsd:anyAttribute namespace="##any" processContents="lax" />
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="entitlements-in">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="EntitlementsType">
                    <xsd:attribute type="xsd:string" name="version" use="required" />
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:element name="entitlements-out">
        <xsd:complexType>
            <xsd:complexContent>
                <xsd:extension base="ExtensibleEntitlementsType">
                    <xsd:attribute type="xsd:string" name="version" use="required" />
                    <xsd:anyAttribute namespace="##any" processContents="lax" />
                </xsd:extension>
            </xsd:complexContent>
        </xsd:complexType>
    </xsd:element>

    <xsd:simpleType name="EntitlementIdType">
        <xsd:restriction base="xsd:token">
            <xsd:pattern value="[a-zA-Z]+(\.[a-zA-Z]+)*(:[a-zA-Z]+(\.[a-zA-Z]+)*)?" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ExtensibleIdentityStatusType">
        <xsd:union memberTypes="IdentityStatusType xsd:token" />
    </xsd:simpleType>

    <xsd:simpleType name="IdentityStatusType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="ACTIVE" />
            <xsd:enumeration value="INACTIVE" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:simpleType name="ExtensibleEntitlementStatusType">
        <xsd:union memberTypes="EntitlementStatusType xsd:token" />
    </xsd:simpleType>

    <xsd:simpleType name="EntitlementStatusType">
        <xsd:restriction base="xsd:token">
            <xsd:enumeration value="ACTIVE" />
            <xsd:enumeration value="INACTIVE" />
        </xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="EntitlementsType">
        <xsd:sequence>
            <xsd:element name="entitlement" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="id" type="EntitlementIdType" minOccurs="1"
                                     maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>References the entitlement. The list of available
                                    Entitlement IDs is OEM-specific.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                        <xsd:element name="endDate" type="xsd:dateTime" minOccurs="1"
                                     maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>Defines until when the entitlement is valid. A timezone
                                    MUST be specified, otherwise the date is interpreted as being in an
                                    arbitrary timezone, which most likely is not the intended timezone.
                                </xsd:documentation>
                            </xsd:annotation>
                        </xsd:element>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ExtensibleEntitlementsType">
        <xsd:sequence>
            <xsd:element name="entitlement" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="id" minOccurs="1" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:annotation>
                                    <xsd:documentation>References the entitlement. The list of available
                                        Entitlement IDs is OEM-specific.
                                    </xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleContent>
                                    <xsd:extension base="EntitlementIdType">
                                        <xsd:anyAttribute namespace="##any" processContents="lax" />
                                    </xsd:extension>
                                </xsd:simpleContent>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="endDate" minOccurs="1" maxOccurs="1">
                            <xsd:annotation>
                                <xsd:documentation>Defines until when the entitlement is valid. A timezone
                                    MUST be specified, otherwise the date is interpreted as being in an
                                    arbitrary timezone, which most likely is not the intended timezone.
                                </xsd:documentation>
                            </xsd:annotation>
                            <xsd:complexType>
                                <xsd:simpleContent>
                                    <xsd:extension base="xsd:dateTime">
                                        <xsd:anyAttribute namespace="##any" processContents="lax" />
                                    </xsd:extension>
                                </xsd:simpleContent>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="status" minOccurs="1" maxOccurs="1">
                            <xsd:complexType>
                                <xsd:annotation>
                                    <xsd:documentation>Whether the entitlement is currently active or not.
                                        If inactive, this entitlement is considered blocked, and the identity
                                        is not entitled to it. Note that an entitlement can still be in the
                                        active state even if the end date has passed, but an identity will not
                                        receive service.
                                    </xsd:documentation>
                                </xsd:annotation>
                                <xsd:simpleContent>
                                    <xsd:extension base="ExtensibleEntitlementStatusType">
                                        <xsd:anyAttribute namespace="##any" processContents="lax" />
                                    </xsd:extension>
                                </xsd:simpleContent>
                            </xsd:complexType>
                        </xsd:element>
                        <xsd:any namespace="##targetNamespace" processContents="lax"
                                 minOccurs="0" maxOccurs="unbounded" />
                    </xsd:sequence>
                    <xsd:anyAttribute namespace="##any" processContents="lax" />
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>
</xsd:schema>